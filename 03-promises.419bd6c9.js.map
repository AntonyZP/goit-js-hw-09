{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAE9BC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExCF,EAAKM,iBAAiB,UAmBtB,SAAkBC,GAChBA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAQD,GAAK,EAChCE,EAAcF,EAAGG,GACjBA,GAASC,C,IAtBbV,EAAQG,iBAAiB,SAMzB,SAAiBC,GACfK,EAAQE,OAAOP,EAAEQ,OAAOC,OACxBC,QAAQC,IAAIN,E,IAPdR,EAAOE,iBAAiB,SASxB,SAAgBC,GACdM,EAAOC,OAAOP,EAAEQ,OAAOC,OACvBC,QAAQC,IAAIL,E,IAVdR,EAASC,iBAAiB,SAY1B,SAAkBC,GAChBG,EAASI,OAAOP,EAAEQ,OAAOC,OACzBC,QAAQC,IAAIR,E,IAbd,IAAIE,EAAQ,KACRC,EAAO,KACPH,EAAS,KAoBb,SAASC,EAAcQ,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUI,EAAKD,EAALF,MACjBI,EAAAnC,GAASoC,OAAOC,QAAQ,qBAAoCC,OAAfR,EAAS,QAAYQ,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAN,G,IAAGH,EAAQG,EAARH,SAAUU,EAAKP,EAALF,MAClBI,EAAAnC,GAASoC,OAAOK,QAAQ,oBAAmCH,OAAfR,EAAS,QAAYQ,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst delayIn = document.querySelector('[name=\"delay\"]');\nconst stepIn = document.querySelector('[name=\"step\"]');\nconst amountIn = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onSubmit);\ndelayIn.addEventListener('input', onDelay);\nstepIn.addEventListener('input', onStep);\namountIn.addEventListener('input', onAmount);\nlet delay = null;\nlet step = null;\nlet amount = null;\nfunction onDelay(e) {\n  delay = Number(e.target.value);\n  console.log(delay);\n}\nfunction onStep(e) {\n  step = Number(e.target.value);\n  console.log(step);\n}\nfunction onAmount(e) {\n  amount = Number(e.target.value);\n  console.log(amount);\n}\nfunction onSubmit(e) {\n  e.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayIn","$ce04d3a99e08e73b$var$stepIn","$ce04d3a99e08e73b$var$amountIn","addEventListener","e","preventDefault","i","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","Number","target","value","console","log","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.419bd6c9.js.map"}